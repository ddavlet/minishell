    
    
    
    
    {	CMD_0   PIPE_0	(CMD_1	| CMD_2)    PIPE_1    CMD_3    PIPE_2	(CMD_4	| CMD_5)    PIPE_3    CMD_6 }

    {   PIPE_0, PIPE_1, PIPE_2   }

    { 	CMD_0	PIPE_0   (CMD_1	 PIPE_2	  CMD_3	 PIPE_3	  CMD_4)    }



	shell_a	(cmds) STND_IN: 0 STND_OUT: 1
	=>	first cmd: CMD_0
		=>	subscope?	no
		=>	builtin?	no
		=>	operation?	PIPE
			=>	create PIPE
		=>	fork child_a
		=>	last command or AND/OR? no
	=>	second cmd: CMD_1
		=>	subscope? yes
			=>	fork child_b
			=>	skip cmds inside subscope
			=>	last scope or AND/OR? yes
				=> waitpid child_b
				=> AND/OR? no
	=>	end

	child_a
	=>	subscope? no
	=>	operation before? RUN
	=>	operation?	PIPE
		=>  dup2 (PIPE, STDOUT_FILENO) STND_IN: 0 STND_OUT: PIPE
	=>  close read_fd of PIPE_0
	=>  execve CMD_0

	child_b
	=>	subscope? yes
		create subscope_cmds
	=>	operation before? PIPE
		=>  dup2 (PIPE, STDIN_FILENO) STND_IN: PIPE STND_OUT: 1
		=>	close write_fd of PIPE
	=>	operation ? PIPE
        =>  create PIPE
	=>	execve shell_b(subscope_cmds)
   
	shell_b (subscope_cmds) STND_IN: PIPE STND_OUT: 1
	=>	first cmd: CMD_1
		=>	subscope? no
		=>	operation? PIPE
			=> create pipe
		=>	fork child_c
		=>	last command or AND/OR? no
	=>	second cmd: CMD_2
		=>	subscope? no
		=>	operation? RUN
		=>	fork child_d
		=>	last command or AND/OR? yes
			=>	waitpid child_d
			=>	AND/OR? no
	=>	end

	child_c
	=>	subscope? no
	=>	operation before? RUN
	=>	operaiton? PIPE
		dup2 (PIPE, STDOUT_FILENO) STND_IN: 0 STND_OUT: PIPE
		close read_fd of PIPE
	=>	execve CMD_1

	child_d
	=>	subscope? no
	=>	operation before? PIPE
		=> dup2 (PIPE, STDIN_FILENO) STND_IN: PIPE STND_OUT: 1
		=> close write_fd of PIPE
	=>	operation? RUN
	=>	execve CMD_2

















